# -*- coding: utf-8 -*-
"""Events Data Processing

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E_ZV8I5sG8UdDV-pNBrx1LQIMuGnYgv0
"""



#Pick all values for data

country_val= input("What country data do you want to see? ")
print(country_val)

start_date= input("Enter start date YYYY-MM-DD:")
print(start_date)

end_date= input("Enter end date YYYY-MM-DD:")
print(end_date)

time_zone=input("Enter time zone:")
print(time_zone)

#Retrieve data from predict hq api

import requests

response = requests.get(
    url="https://api.predicthq.com/v1/events/",
    headers={
      "Authorization": "Bearer nW2JOjmghAEdAPzX8cvU6S5MJHNS6bYc7vrlUoJ_",
      "Accept": "application/json"
    },
    params={
        "category" : "sports, academic, community, concerts, conferences, expos, performing-arts, festivals",
        "country": country_val,
        "active.gte": start_date, "active.lte": end_date,
        "active.tz":time_zone
         
    }
)

print(response.json())

#pre-process dataset and convert into json format

import json
with open('data.json', 'w') as outfile:
    json.dump(response.json(), outfile)

import pandas as pd
df=pd.read_json('data.json')
df

df_results=df['results']
js = df_results.to_json(orient = 'records')
print(js)

df_results=pd.DataFrame(dict([ (k,pd.Series(v)) for k,v in df_results.items() ])).transpose()

df_results=df_results.drop(['aviation_rank', 'brand_safe','country','first_seen','id','labels','local_rank','phq_attendance','place_hierarchies','predicted_end','rank','relevance','scope','state','timezone','updated'], axis = 1 )

from google.colab import drive
drive.mount('drive')
df_results.to_csv('events_data_uae.csv')

pip install simplejson

#converting json to geojson

from sys import argv
from os.path import exists
import simplejson as json

script, in_file, out_file = argv

data = df['results']

eventdetails = {
    "type": "FeatureCollection",
    "features": [
    {
        "type": "Feature",
        "geometry" : {
            "type": "Point",
            "coordinates": [d["location"][0], d["location"][1]],
            },
        "properties" : d,
     } for d in data]
}


output = open(out_file, 'w')
json.dump(eventdetails, output)

print (eventdetails)

with open('event-details.geojson', 'w') as f:
    f.write('event_details')